<Application x:Class="OnnxStack.UI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=System.ComponentModel.TypeConverter"
             xmlns:local="clr-namespace:OnnxStack.UI"
             xmlns:SD_Enums="clr-namespace:OnnxStack.StableDiffusion.Enums;assembly=OnnxStack.StableDiffusion"
             xmlns:userControls="clr-namespace:OnnxStack.UI.UserControls"
             xmlns:behaviors="clr-namespace:OnnxStack.UI.Behaviors"
             xmlns:models="clr-namespace:OnnxStack.UI.Models"
             xmlns:coreConfig="clr-namespace:OnnxStack.Core.Config;assembly=OnnxStack.Core"
             xmlns:onnxEnums="clr-namespace:Microsoft.ML.OnnxRuntime;assembly=Microsoft.ML.OnnxRuntime"
             xmlns:converters="clr-namespace:OnnxStack.UI.Converters">
    <Application.Resources>

        <BitmapImage x:Key="PlaceholderIcon" UriSource="/Images/Icon.png" />
        <BitmapImage x:Key="PlaceholderImage" UriSource="/Images/placeholder.png" />
        <BitmapImage x:Key="PlaceholderImageSmall" UriSource="/Images/placeholder_sm.png" />
        <Storyboard x:Key="LoadingAnimation">
            <DoubleAnimation Storyboard.TargetProperty="(Image.RenderTransform).(RotateTransform.Angle)" To="360" Duration="0:0:1" RepeatBehavior="Forever" />
        </Storyboard>
        <FontFamily x:Key="FontAwesomeBrands">pack://application:,,,/Fonts/fa-brands-400.ttf#Font Awesome 5 Brands Regular</FontFamily>
        <FontFamily x:Key="FontAwesomeDuotone">pack://application:,,,/Fonts/fa-duotone-900.ttf#Font Awesome 5 Duotone Solid</FontFamily>
        <FontFamily x:Key="FontAwesomeLight">pack://application:,,,/Fonts/fa-light-300.ttf#Font Awesome 5 Pro Light</FontFamily>
        <FontFamily x:Key="FontAwesomeRegular">pack://application:,,,/Fonts/fa-regular-400.ttf#Font Awesome 5 Pro Regular</FontFamily>
        <FontFamily x:Key="FontAwesomeSolid">pack://application:,,,/Fonts/fa-solid-900.ttf#Font Awesome 5 Pro Solid</FontFamily>

        <system:Boolean x:Key="True">True</system:Boolean>
        <system:Boolean x:Key="False">False</system:Boolean>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" />
        <converters:InverseBoolConverter x:Key="InverseBoolConverter" />
        <converters:BooleanToHiddenConverter x:Key="BooleanToHiddenConverter" />
        <converters:InverseBooleanToHiddenConverter x:Key="InverseBooleanToHiddenConverter" />
        <converters:NullVisibilityConverter x:Key="NullVisibilityConverter" />
        <converters:InverseNullVisibilityConverter x:Key="InverseNullVisibilityConverter" />
        <converters:DiffuserVisibilityConverter x:Key="DiffuserVisibilityConverter" />
        <converters:PipelineVisibilityConverter x:Key="PipelineVisibilityConverter" />
        <converters:EnumDescriptionConverter x:Key="EnumDescriptionConverter" />
        <converters:FullPathToFileNameConverter x:Key="FullPathToFileNameConverter" />

        <ObjectDataProvider x:Key="ListSortDirection" MethodName="GetValues" ObjectType="{x:Type system:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="componentModel:ListSortDirection"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="SchedulerType" MethodName="GetValues" ObjectType="{x:Type system:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="SD_Enums:SchedulerType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="ModelType" MethodName="GetValues" ObjectType="{x:Type system:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="SD_Enums:ModelType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="TokenizerType" MethodName="GetValues" ObjectType="{x:Type system:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="SD_Enums:TokenizerType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="AlphaTransformType" MethodName="GetValues" ObjectType="{x:Type system:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="SD_Enums:AlphaTransformType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="BetaScheduleType" MethodName="GetValues" ObjectType="{x:Type system:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="SD_Enums:BetaScheduleType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="PredictionType" MethodName="GetValues" ObjectType="{x:Type system:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="SD_Enums:PredictionType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="TimestepSpacingType" MethodName="GetValues" ObjectType="{x:Type system:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="SD_Enums:TimestepSpacingType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="VarianceType" MethodName="GetValues" ObjectType="{x:Type system:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="SD_Enums:VarianceType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>


        <ObjectDataProvider x:Key="ExecutionModeType" MethodName="GetValues" ObjectType="{x:Type system:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="onnxEnums:ExecutionMode"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="DiffuserPipelineType" MethodName="GetValues" ObjectType="{x:Type system:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="SD_Enums:DiffuserPipelineType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="ControlNetType" MethodName="GetValues" ObjectType="{x:Type system:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="SD_Enums:ControlNetType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>


        <!--Crop Image Dialog-->
        <SolidColorBrush x:Key="CropFrameBrush" Color="#FF3296FA" />
        <SolidColorBrush x:Key="CropFrameBorder" Color="#FFC8C8C8" />

        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Padding" Value="2" />
        </Style>


        <Style x:Key="SplitTabControl" TargetType="{x:Type TabControl}" >
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabControl">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <DockPanel Grid.Row="0" IsItemsHost="True" >
                            </DockPanel>
                            <ContentPresenter Grid.Row="1" ContentSource="SelectedContent"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    

        <Style TargetType="{x:Type GridSplitter}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GridSplitter}">
                        <Grid>
                            <Button  Padding="0" Margin="0" >
                                <TextBlock Text="⁞"  />
                            </Button>
                            <Rectangle Fill="#00FFFFFF" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="ImageResultListBoxItem" TargetType="ListBoxItem">
            <Setter Property="Margin" Value="2"/>
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                            <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <DataTemplate DataType="{x:Type models:ImageResult}">
            <DockPanel Width="200" Height="265" HorizontalAlignment="Center">
                <StackPanel  DockPanel.Dock="Bottom" >
                    <UniformGrid Columns="2" Rows="2" HorizontalAlignment="Center">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <TextBlock Text="{Binding SchedulerType}" Margin="2,0,0,0"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" >
                            <TextBlock Text="Steps:" Margin="2,0,0,0" FontSize="9" Opacity=".6" VerticalAlignment="Center" FontStyle="Italic"/>
                            <TextBlock Text="{Binding SchedulerOptions.InferenceSteps}" Margin="2,0,0,0"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <TextBlock Text="Guidance:" Margin="2,0,0,0"  FontSize="9" Opacity=".6" VerticalAlignment="Center" FontStyle="Italic"/>
                            <TextBlock Text="{Binding SchedulerOptions.GuidanceScale}" Margin="2,0,0,0"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <TextBlock Text="Seed:" Margin="2,0,0,0"  FontSize="9" Opacity=".6" VerticalAlignment="Center" FontStyle="Italic"/>
                            <TextBlock Text="{Binding SchedulerOptions.Seed}"  Margin="2,0,0,0" />
                        </StackPanel>
                    </UniformGrid>
                    <UniformGrid Columns="6" Margin="0,2,0,2">
                        <Button Command="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Window}}, Path=SaveImageResultCommand}" CommandParameter="{Binding}">
                            <userControls:FontAwesome Icon="&#xf0c7;" IconStyle="Light"  Size="13" ToolTip="Save Image File"/>
                        </Button>
                        <Button Command="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Window}}, Path=SaveBlueprintCommand}" CommandParameter="{Binding}" BorderThickness="0, 1">
                            <userControls:FontAwesome Icon="&#xf121;" IconStyle="Light"  Size="13" ToolTip="Save Blueprint File"/>
                        </Button>
                        <Button Command="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Window}}, Path=NavigateTextToImageCommand}" CommandParameter="{Binding}">
                            <userControls:FontAwesome Icon="&#xf15c;" IconStyle="Light"  Size="13" ToolTip="Send To Text To Image"/>
                        </Button>
                        <Button Command="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Window}}, Path=NavigateImageToImageCommand}" CommandParameter="{Binding}" BorderThickness="0, 1">
                            <userControls:FontAwesome Icon="&#xf302;" IconStyle="Light"  Size="13" ToolTip="Send To Image To Image"/>
                        </Button>
                        <Button  Command="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Window}}, Path=NavigateImageInpaintCommand}" CommandParameter="{Binding}" >
                            <userControls:FontAwesome Icon="&#xf1fc;" IconStyle="Light"  Size="13" ToolTip="Send To Image Inpaint"/>
                        </Button>
                        <Button  Command="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Window}}, Path=NavigateUpscalerCommand}" CommandParameter="{Binding}" Padding="2,2" BorderThickness="0,1,1,1">
                            <userControls:FontAwesome Icon="&#xf424;" IconStyle="Light" Size="13" ToolTip="Send To Upscaler"/>
                        </Button>
                    </UniformGrid>
                </StackPanel>
                <Border Margin="0,2"  BorderThickness="1"  >
                    <Image Source="{Binding Image}" DockPanel.Dock="Left"  Stretch="Uniform" VerticalAlignment="Center" />
                </Border>
            </DockPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type models:UpscaleResult}">
            <DockPanel Width="220" Height="285" HorizontalAlignment="Center">
                <StackPanel  DockPanel.Dock="Bottom" >

                    <UniformGrid Columns="2" Margin="0,3">

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <TextBlock Text="Scale Factor:" Margin="0,0,5,0" FontStyle="Italic"  FontSize="10" Opacity=".6" VerticalAlignment="Center"/>
                            <TextBlock Text="{Binding Info.ScaleFactor}" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <TextBlock Text="Elapsed:" Margin="5,0,0,0"  FontSize="10" Opacity=".6" VerticalAlignment="Center" FontStyle="Italic"/>
                            <TextBlock Text="{Binding Elapsed, StringFormat={}{0:F1}s}" Margin="5,0,0,0"/>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <TextBlock Text="Input:" Margin="0,0,5,0" FontStyle="Italic" FontSize="10" Opacity=".6" VerticalAlignment="Center"/>
                            <TextBlock Text="{Binding Info.InputWidth}" />
                            <TextBlock Text="x" Margin="2,0,2,0"/>
                            <TextBlock Text="{Binding Info.InputHeight}" />
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <TextBlock Text="Output:" Margin="0,0,5,0" FontStyle="Italic" FontSize="10" Opacity=".6" VerticalAlignment="Center"/>
                            <TextBlock Text="{Binding Info.OutputWidth}" />
                            <TextBlock Text="x" Margin="2,0,2,0"/>
                            <TextBlock Text="{Binding Info.OutputHeight}" />
                        </StackPanel>

                    </UniformGrid>

                       

                    <UniformGrid Columns="1" Height="30" IsEnabled="{Binding HasResult}">
                        <Button Command="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Window}}, Path=SaveImageCommand}" CommandParameter="{Binding}" ToolTip="Save Image File">
                            <StackPanel Orientation="Horizontal">
                                <userControls:FontAwesome Icon="&#xf0c7;" IconStyle="Light"  Size="13" />
                                <TextBlock Text="Save Image" Margin="5,0,0,0"/>
                            </StackPanel>
                        </Button>
                    </UniformGrid>


                </StackPanel>
                <Border Margin="0,2"   BorderThickness="1" >
                    <Image Source="{Binding Image}" DockPanel.Dock="Left"  Stretch="Uniform" VerticalAlignment="Center" />
                </Border>
            </DockPanel>
        </DataTemplate>

    </Application.Resources>
</Application>
